# The AWS REGION
AWS_REGION=us-east-1

# Address of the Geth or Parity WebSocket host
ETH_NODE_HOST=ws://127.0.0.1

# Port of the Geth or Parity WebSocket host
ETH_NODE_PORT=8546

# S3 timeout for storing or retrieving blocks
S3_TIMEOUT_MS=10000

# S3 buckets to store blocks in
S3_BUCKET_URI=my-bucket

# If enabled, publish block numbers only to SNS
SNS_ENABLED=true

# SNS Topic if enabled
SNS_TOPIC=arn:aws:sns:us-east-1:42069:ethereum-blocks

# The host of the redis instance
REDIS_ADDRESS=localhost:6379

# The password of the redis instance
REDIS_PASSWORD=hunter2

# The redis DB
REDIS_DB=0

# The key for the working time set (sorted set with value as timestamps)
REDIS_WORKING_TIME_SET_KEY=ingestr/working_time_set

# The key for the working block set (sorted set with value as block numbers)
REDIS_WORKING_BLOCK_SET_KEY=ingestr/working_block_set

# The key for the last finished block
REDIS_LAST_FINISHED_BLOCK_KEY=ingestr/last_finished_block

# The maximum number of blocks to work on at once.
MAX_CONCURRENCY=3

# The amount of time that a working block exists in redis before we reconsider it for processing
# again. This is a failure recovery mechanism.
WORKING_BLOCK_TTL_SECONDS=60

# The block to start at when running for the first time
WORKING_BLOCK_START=8816481

# SNS timeout for publishing block numbers
SNS_TIMEOUT_MS=10000

# The number of blocks to wait before storing/publishing. This can be useful for avoiding reorg
# scenarios.
MIN_CONFIRMATIONS=3

# The timeout for requesting new blocks
NEW_BLOCK_TIMEOUT_MS=60000

# The timeout for HTTP requests
HTTP_TIMEOUT_MS=15000
